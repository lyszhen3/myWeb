<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:util="http://www.springframework.org/schema/util"
       xmlns:p="http://www.springframework.org/schema/p" xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd">
    <description>Shiro 配置</description>

    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <property name="securityManager" ref="securityManager"/>
        <!--<property name="loginUrl" value="/init/daifaLogin.htm" />-->
        <!--<property name="successUrl" value="/mainindex.htm"/>-->
        <!--<property name="unauthorizedUrl" value="/init/daifaLogin.htm"/>-->
        <property name="filters">
            <map>
                <!--<entry key="daifa" value-ref="tae_daifaAdminRegularFilter"/>
                <entry key="api" value-ref="tae_apiRequestFilter"/>
                <entry key="admin" value-ref="tae_daifaAdminRequestFilter"/>-->
            </map>
        </property>
        <property name="filterChainDefinitions">
            <value>
                /** = authc
                <!--/daili/**.js = anon
                /daili/**.css = anon
                /daili/**.jpg = anon
                /daili/**.png = anon
                /api/**.action = api
                /api/**.json = api
                /daifa/*.json = daifa
                /daifa/*.htm = daifa
                /daifa/** = daifa
                /admin/*.json = admin
                /admin/*.htm = admin
                /admin/** = admin

                &lt;!&ndash;登录初始化页面&ndash;&gt;
                /init/*.htm = anon
                /login.htm = anon
                /detail.htm = anon
                /websocket/* =anon
                /**.json = authc
                /**.htm = authc
                /index.html = authc-->
            </value>
        </property>
    </bean>

    <bean id="monitorRealm" class="com.lin.shiro.MyselfRealm">
        <!--<property name="credentialsMatcher">-->
        <!--<bean class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">-->
        <!--<property name="hashAlgorithmName" value="MD5"/>-->
        <!--<property name="storedCredentialsHexEncoded" value="true"/>-->
        <!--<property name="hashIterations" value="2" />-->
        <!--</bean>-->
        <!--</property>-->
    </bean>

    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <!-- 基于ehCache来缓存用户认证信息和授权信息的实现 -->
        <property name="cacheManager" ref="cacheManagers"/>
        <property name="sessionManager" ref="sessionManager"/>
        <!--设置自定义realm -->
        <property name="realm" ref="monitorRealm"/>

        <!-- 记住我 -->
        <!--<property name="rememberMeManager" ref="rememberMeManager"/>-->

    </bean>

    <bean id="rememberMeManager" class="org.apache.shiro.web.mgt.CookieRememberMeManager">
        <property name="cookie" ref="rememberMeCookie"/>
    </bean>

    <!-- 记住我cookie -->
    <bean id="rememberMeCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
        <!-- rememberMe是cookie的名字 -->
        <constructor-arg value="rememberMe"/>
        <!-- 记住我cookie生效时间30天 -->
        <property name="maxAge" value="2592000"/>
    </bean>


    <bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
        <property name="globalSessionTimeout" value="1800000"/>
        <property name="sessionDAO" ref="sessionDAO"/>
    </bean>

    <bean id="sessionDAO" class="org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO">
        <property name="activeSessionsCacheName" value="shiro-activeSessionCache"/>
        <!--<property name="sessionIdGenerator" ref="sessionIdGenerator"/>-->
    </bean>

    <!-- Session ID 生成器 -->
    <!--<bean id="sessionIdGenerator" class="org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator">-->
    <!--</bean>-->

    <bean id="cacheManagers" class="org.apache.shiro.cache.ehcache.EhCacheManager">
        <!--<property name="cacheManager" ref="ehCacheManagers"/>-->
        <property name="cacheManagerConfigFile" value="classpath:shiro/shiro-ehcache.xml"/>
    </bean>

<!--    <bean id="ehCacheManagers" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean" p:shared="true">
        <property name="configLocation" value="classpath:shiro/shiro-ehcache.xml"/>
    </bean>-->


    <!-- securityManager -->
    <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="staticMethod" value="org.apache.shiro.SecurityUtils.setSecurityManager"/>
        <property name="arguments" ref="securityManager"/>
    </bean>

    <!-- 保证实现了Shiro内部lifecycle函数的bean执行 -->
    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>


    <!-- AOP式方法级权限检查  -->
    <bean
            class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"
            depends-on="lifecycleBeanPostProcessor">
        <property name="proxyTargetClass" value="true"/>
        <property name="usePrefix" value="true"/>
    </bean>

    <bean
            class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
        <property name="securityManager" ref="securityManager"/>
    </bean>


</beans>